<!-- stacks.html -->
<!DOCTYPE html>
<html lang="en">
<%- include('partials/header') %>
<body>
<header>
    <h1>Stacks and Queues</h1>
</header>
<%- include('partials/nav') %>
<main>
    <div class="stacks-content">
        <div class="stacks-text">
            <h2>Stacks</h2>
            <p>A stack is a linear data structure that follows the Last In, First Out (LIFO) principle. Elements are added and removed from the top of the stack.</p>
            <h3>Basic Operations:</h3>
            <ul>
                <li><strong>Push:</strong> Add an element to the top.</li>
                <li><strong>Pop:</strong> Remove the top element.</li>
                <li><strong>Peek:</strong> View the top element without removing it.</li>
            </ul>
            <h3>Applications:</h3>
            <ul>
                <li><strong>Expression Evaluation:</strong> Used in parsing expressions and evaluating postfix expressions.</li>
                <li><strong>Backtracking:</strong> Helps in algorithms that require backtracking, like maze solving.</li>
                <li><strong>Function Call Management:</strong> Manages function calls in programming languages.</li>
            </ul>
        </div>
        <div class="stacks-image">
            <img src="img/stacks.jpg" alt="Stacks Example">
        </div>
    </div>
    <div class="queues-content">
        <div class="queues-text">
            <h2>Queues</h2>
            <p>A queue is a linear data structure that follows the First In, First Out (FIFO) principle. Elements are added at the rear and removed from the front.</p>
            <h3>Basic Operations:</h3>
            <ul>
                <li><strong>Enqueue:</strong> Add an element to the rear.</li>
                <li><strong>Dequeue:</strong> Remove an element from the front.</li>
                <li><strong>Front:</strong> Access the first element without removing it.</li>
            </ul>
            <h3>Applications:</h3>
            <ul>
                <li><strong>Order Processing:</strong> Manages tasks in order, such as print spooling.</li>
                <li><strong>Breadth-First Search:</strong> Used in graph traversal algorithms.</li>
                <li><strong>Resource Management:</strong> Handles resources in operating systems, like CPU scheduling.</li>
            </ul>
        </div>
        <div class="queues-image">
            <img src="img/queue.jpg" alt="Queues Example">
        </div>
    </div>
    <p>For more information, visit <a href="https://www.telerik.com/blogs/stack-queue-javascript" target="_blank">this guide on stacks and queues in JavaScript</a>.</p>
</main>
<%- include ('partials/footer') %>
</body>
</html>